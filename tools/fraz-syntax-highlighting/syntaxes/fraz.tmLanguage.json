{
	"$schema": "https://raw.githubusercontent.com/martinring/tmlanguage/master/tmlanguage.json",
	"name": "Fraz",
	"patterns": [
		{
			"include": "#keywords"
		},
		{
			"include": "#numerics"
		},
		{
			"include": "#strings"
		},
		{
			"include": "#default_types"
		},
		{
			"include": "#comments"
		},
		{
			"include": "#subject_objects"
		},
		{
			"include": "#target_objects"
		},
		{
			"include": "#queries"
		}
	],
	"repository": {
		"keywords": {
			"patterns": [{
				"include": "#model_operators"
			},
			{
				"include": "#query_operators"
			}]
		},
		"model_operators": {
			"patterns": [{
				"name": "keyword.operator.fraz",
				"match": "\\b(has between|has|is between|is before|is|are|of|between|either|and)\\b"
			}]
		},
		"query_operators": {
			"patterns": [{
				"name": "keyword.operator.fraz",
				"match": "\\b(Sum|sum)\\b"
			}]
		},
		"numerics": {
			"patterns": [{
				"include": "#datetime"
			},
			{
				"include": "#floats"
			}
		]
		},
		"datetime": {
			"patterns": [{
				"name": "constant.numeric.datetime.fraz",
				"match": "([0-2]\\d|3[0-1])\/([0]\\d|1[0-2])\/\\d{4}( ([0-1]\\d|2[0-3]):[0-5]\\d(:[0-5]\\d(.\\d{3})?)?)?"
			}]
		},
		"floats": {
			"patterns": [{
				"name": "constant.numeric.float.fraz",
				"match": "\\b[+-]?([0-9]+\\.)?[0-9]+"
			}]
		},
		"strings": {
			"name": "string.quoted.double.fraz",
			"begin": "\"",
			"end": "\"",
			"patterns": [
				{
					"name": "constant.character.escape.fraz",
					"match": "\\\\."
				}
			]
		},
		"default_types": {
			"patterns": [{
				"name": "storage.type.class.fraz",
				"match": "\\b(a datetime|characters)\\b"
			}]
		},
		"comments": {
			"patterns": [{
				"name": "comment.line.fraz",
				"match": "\\#(.)*"
			}]
		},
		"subject_objects": {
			"patterns": [{
				"name": "entity.name.function.fraz",
				"match": "(?<=^|\\. )([^\\.]+?)(?= (has between|has|is between|is before|is|are|of|between|either)\\b)"
			  }]
		},
		"target_objects": {
			"patterns": [{
				"name": "variable.parameter.function.language.special.self.fraz",
				"match": "(?<=^    |\\b(has between|has|is between|is before|is|are|of|between|either) )([^(\\.|,)]+?)(?=\\.|$|either|between|of)"
			}]
		},
		"queries": {
			"patterns": [{
			  "name": "entity.name.class.fraz",
			  "begin": "^(Sum|sum)\\b",
			  "end": "$",
			  "patterns": [{
				"name": "entity.name.class.fraz",
				"match": "([^\\.]+?)"
			  }]
			}]
		}
	},
	"scopeName": "source.fraz"
}